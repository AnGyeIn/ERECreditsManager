EREGraduation의 개선작.
-----------------------

기본 체계

total : 교양 + 전공 / 130학점
 culture : 교양 / 40학점
  culture_basic : 학문의 기초 / 34학점
   thiExp : 사고와 표현 / 3학점
    sciEngWri : 과학과 기술 글쓰기(3학점)

   foreign : 외국어 2개 교과목(TEPS 900점 이하 영어 1과목 필수) / 4학점
    foreignFree : 외국어 사용자 지정 추가

   numAnaInf : 수량적 분석과 추론 / 12학점
    math1 : (고급)수학 및 연습1(3학점)
    math2 : (고급)수학 및 연습2(3학점)
    engMat1 : 공학수학1(3학점)
    engMat2 : 공학수학2(3학점)

   sciThiExp : 과학적 사고와 실험 / 12학점
    physics1 : (고급)물리학1(물리의 기본1)(3학점)
    phyExp1 : 물리학실험1(1학점)
    physics2 : (고급)물리학2(물리의 기본2)(3학점)
    phyExp2 : 물리학실험2(1학점)
    physics : 물리학(3학점)
    phyExp : 물리학실험(1학점)
    chemistry1 : 화학1(3학점)
    cheExp1 : 화학실험1(1학점)
    chemistry2 : 화학2(3학점)
    cheExp2 : 화학실험2(1학점)
    chemistry : 화학(3학점)
    cheExp : 화학실험(1학점)
    earSysSci : 지구시스템과학(3학점)
    earSysSciExp : 지구시스템과학실험(1학점)

   comInfApp : 컴퓨터와 정보 활용 / 3학점
    computer : 컴퓨터의 개념 및 실습(3학점)

  culture_world : 학문의 세계(2개 영역 이상) / 6학점
   lenLit : 언어와 문학
    lenLitFree : 언어와 문학 사용자 지정 추가

   culArt : 문화와 예술
    culArtFree : 문화와 예술 사용자 지정 추가

   hisPhi : 역사와 철학
    hisPhiFree : 역사와 철학 사용자 지정 추가

   polEco : 정치와 경제
    polEcoFree : 정치와 경제 사용자 지정 추가

   humSoc : 인간과 사회
    humSocFree : 인간과 사회 사용자 지정 추가

  culture_engineering : 공대 사회/창의성 / 6학점
   society : 사회성 교과목군 or 인간과 사회 영역 / 3학점
    socFree : 사회성 사용자 지정 추가

   creativity : 창의성 교과목군 or 문화와 예술 영역 / 3학점
    creFree : 창의성 사용자 지정 추가

 major : 전공 / 62학점
  major_necessary : 전공필수 / 19학점
    eneResDyn : 에너지자원역학(3학점)
    eneEcoTecAdm : 에너지환경기술경영(3학점)
    earPhyEng : 지구물리공학(3학점)
    stoDynExp : 암석역학및실험(3학점)
    oilGasEngExp : 석유가스공학및실험(3학점)
    resEngPra : 자원공학실습(1학점)
    resProEng : 자원처리공학(3학점)

  major_optional : 전공선택 / 40학점
    optFree : 전공선택 사용자 지정 추가

  major_other : 공대 타학과개론 / 3학점
    othFree : 타학과개론 사용자 지정 추가

 normal : 그 외
    norFree : 그 외 사용자 지정 추가

----------------------------------------------------------------------------

Class 위계구조
(total)
 Type : culture, major, normal
  LectureField : culture_basic, culture_world, culture_engineering, major_necessary, major_optional, major_other
   LectureGroup : thiExp, foreign, numAnaInf, sciThiExp, comInfApp, society, creativity
   LectureWorld : lenLit, culArt, hisPhi, polEco, humSoc
    Lecture : sciEngWri, math1, math2, engMat1, engMat2, physics1, phyExp1, physics2, phyExp2, physics, phyExp, chemistry1, cheExp1, chemistry2, cheExp2, chemistry, cheExp, earSysSci, earSysSciExp, computer, eneResDyn, eneEcoTecAdm, earPhyEng, stoDynExp, oilGasEngExp, resEngPra, resProEng, (사용자 지정 추가)
    FreeLecture : 
    AddedLecture : (사용자 지정 추가로 생성)

----------------------------------------------------------------------------

구현 방식

---[버전 1.0]---
-ListView 1개에 위의 항목을 TextView로 구현하여 터치 시마다 하위 항목을 추가/삭제.
 -Type, LectureField, LectureGroup, LectureWorld 클래스에 viewSwitch를 설정.(ON 또는 OFF)
 -각 클래스 별로 하위 클래스를 담아둘 수 있는 (ArrayList<CreditManager>) underManagers 및 클래스를 담기 위한 addUnderManager 메서드 설정.
  -Layout 터치 시 해당 클래스의 viewSwitch를 조사하여 ON이면 하위 클래스 뷰를 creditManagers에서 삭제.
   -하위 클래스 판단은 code 값이 해당 클래스의 code 값 보다 높은 것으로 확인.
   -LectureLayout의 체크박스를 체크 했을 때 상위 Layout을 터치하면 onClickListener가 작동하지 않는 문제.
    -getLectureLayout 메서드에서 터치할 때마다 notifyDataSetChanged 메서드를 실행하는 것으로 해결.
  -Off인 경우 : adapter의 creditManagers에서 해당 뷰의 다음 index부터 해당 클래스의 underManagers의 요소들을 삽입.
 -adapter의 creditManagers의 구성 요소에 변화를 발생시킬 경우 항상 notifyDataChanged 메서드를 함께 실행하여 thread 오류 방지.

-LectureLayout은 CheckedTextView로 구성. 체크 시 Lecture 클래스 내의 multiplier의 값을 0 또는 1로 변환 -> getComCredit 메서드로 credit * multiplier 값을 반환하여 이수 학점 계산.
 -스크롤 작동 시 체크박스가 화면을 벗어났다가 다시 나타나면 체크가 자동으로 해제되는 문제.
  -MainAdapter의 getLecture 메서드에서 해당 Lecture의 multiplier를 조사하여 그에 따라 setCheck 함으로써 해결.

-FreeLecture, AddedLecture 클래스는 사용자 지정 추가를 위함.
 -FreeLecture 클래스는 사용자 입력을 받는 뷰 생성.
  -클래스 내에 upperManager에는 상위 CreditManager 저장, num에는 이미 추가한 AddedLecture 수 저장.
  -nameText에 과목명, creditText에 학점을 입력하고 addButton 클릭 시 입력한 과목명과 학점으로 AddedLecture 인스턴스가 생성되어 해당 upperManager에 추가됨.
   -nameText와 creditText의 inputType을 각각 textPersonName과 number로 했을 때, 사용자의 폰이 nameText 입력시 자동완성 기능이 있는 자판일 경우 creditText로 넘어갈 때 자동완성 기능이 없는 자판으로 변하면서 nameText에 입력한 내용이 지워지는 현상 발생.
    -creditText의 inputType을 textPersonName|number로 해도 같은 문제 해결 안됨.
    -creditText의 inputType도 textPersonName으로 하는 것으로 문제 해결.
  -addButton 실행 후 nameText와 creditText는 초기화.
 -AddedManager 클래스는 추가된 뷰 생성.
  -기본적인 레이아웃은 Lecture와 유사하나 deleteButton이 추가됨. 사용자가 추가한 과목은 자유롭게 삭제/수정할 수 있게 하기 위함.
  -이를 위해 클래스 내에 upperManager에 상위 CreditManager 저장.

-applyButton : apply 메서드를 사용자가 임의로 실행할 수 있도록 함.
 -apply 메서드 : 사용자가 추가한 강의/학점 및 체크한 항목에 따라 이수 학점 현황을 계산하여 textView들에 반영.
  -하위 단계의 credits를 수합하여 상위 단계의 credits 값에 저장. 최종적으로 totalCredits까지 수합한 뒤 activity_main의 totalCreditsTextView에 반영.
  -수합하는 방식은 각 CreditManager 내의 sumCredits 메서드를 실행시켜 underManagers의 요소들의 credits의 총합을 구하는 과정을 하위단계에서부터 순차적으로 실행.
   -이 때 Lecture 클래스의 getCredits 메서드는 (credit * multiplier)를 반환하게 함.
   -multiplier는 해당 Lecture가 체크되어 있으면 1, 체크되어 있지 않으면 0의 값을 가짐.
  -TypeLayout 이하 단계의 TextView는 스크롤를 작동시켜 화면에서 벗어나게 한 뒤 다시 나타나게 하면 자동으로 반영됨.
  -onCreat 메서드 내에서 apply 메서드 실행. -> 앱 실행 시 자동 반영.

-saveButton : save 메서드를 사용자가 임의로 실행할 수 있도록 함.
 -save 메서드 : 사용자가 추가한 강의/학점 및 체크한 항목 저장.
  -파일에 쓸 데이터를 저장하기 위해 Total 클래스 설정.
   -implements Serializable. (CreditManger도 implements Serializable로 설정.)
   -Type 형의 culture와 major, normal을 가지고 있음.
   -파일에서 읽어왔음을 확인하기 위해 checker를 설정.
    -읽어온 Total이 있으면 checker는 1이며, 읽어온 Total의 정보를 ListView에 set.
    -읽어온 Total이 없으면 checker는 0이며, initialization 메서드 실행.
     -initialization 메서드 : 사용자가 추가/체크한 항목이 없는 초기상태의 세팅을 실행.

-closeButton : 앱 종료.(finish 메서드 실행)
 -finish 메서드 실행 전 save 메서드를 실행함. -> 앱 종료 시 자동 저장.

---[버전 2.0]---
-학번 선택 기능 추가.
 -추가 학번 : 14, 15.
 -과목 추가 및 변동
  (LectureField) major_necessary -> major_necessary_to15 : 전공필수 / 27학점 (15학번 이전)
                                    major_necessary_from16 : 전공필수 / 19학점 (16학번 이후)
  (LectureField) major_optNec (추가) : 전공선택필수 / 9학점 (15학번 이전)
  (LectureField) major_optional -> major_optional_to15 : 전공선택 / 23학점 (15학번 이전)
                                   major_optional_from16 : 전공선택 / 40학점 (16학번 이후)
  (Lecture) eneResFut (추가) : 에너지자원과미래(2학점)
  (Lecture) advResGeo (추가) : 응용자원지질(3학점)
  (Lecture) eneResFigAna (추가) : 에너지자원수치해석(3학점)
  (Lecture) driEng (추가) : 시추공학(3학점)
  (Lecture) newRenEne (추가) : 신재생에너지(3학점)
  (Lecture) advEarChe (추가) : 응용지구화학(3학점)
  (Lecture) eneEcoEng (추가) : 에너지환경공학(3학점)
  (FreeLecture) optFree -> optFree_to15 : 전공선택 사용자 지정 추가 (15학번 이전)
                           optFree_from16 : 전공선택 사용자 지정 추가 (16학번 이후)
 -현재 선택된 학번을 표시하기 위한 studentNum 변수 지정, studentNumTextView에 '~학번'으로 반영.
 -Total 클래스에도 내부변수로 checker를 삭제하고 studentNum 설정. (추후 타 과 업데이트를 고려해 학과 이름을 나타내는 dep 변수도 추가.)
  -checker의 역할(저장된 total이 있는지 확인)은 studentNum이 대체.
   -읽어온 Total이 있으면 studentNum은 이전에 사용자가 입력한 학번 -> 새 창(studentNumLayout)을 비가시화하고 진행.
   -읽어온 Total이 없으면 studentNum은 -1 -> studentNumLayout을 가시화하고 진행.
   -studentNumLayout은 LinearLayout(horizontal)에 TextView, EditText, Button으로 구성.
    -studentNumLayout과 기존 뷰들의 중첩을 막기 위해 기존 뷰를 (RelativeLayout)totalLayout에 담고 visibility를 studentNumLayout과 항상 반대로 설정.
   -(EditText)studentNumEditText에 학번을 입력한 뒤 (Button)studentNumSaveButton을 누르면 studentNumLayout 비가시화.
    -이를 위해 studentNumSave 메서드 구현.
     -initialization 메서드의 매개변수로 studentNum을 받도록 수정.
      -전달받은 studentNum의 값에 따라 학번에 맞는 커리큘럼을 설정하도록 수정.
     -initialization 메서드의 호출 위치를 studentNumSave 내로 이동.
     -입력된 학번을 total의 studentNum에 저장.
 -학번 입력 전 apply 메서드가 실행되면 안되므로 apply 메서드 이하를 실행하는 setting 메서드로 설정.
  -읽어온 total의 checker가 1일 때, 또는 studentNumLayout에서 정상적으로 학번을 입력하고 studentNumSaveButton을 눌렀을 때 setting 메서드가 실행되도록 설정.

---[버전 3.0]---
-13학번 커리큘럼 추가
 -과목 및 변동
  (LectureField) keyCulture (추가) : 핵심교양 / 9학점
  (LectureField) major_necessary_to15 : (삭제)
  (LectureField) major_necessary_from16 -> major_necessary : 전공필수 / 19학점
  (LectureField) major_optional_to15 : (삭제)
  (LectureField) major_optional_from16 -> major_optional : 전공선택 / 40학점
  (LectureWorld) litArt (추가) : 문학과 예술
  (LectureWorld) socIde (추가) : 사회와 이념
  (Lecture) korean (추가) : 대학국어(3학점)
  (Lecture) biology1 (추가) : 생물학1(3학점)
  (Lecture) bioExp1 (추가) : 생물학실험1(1학점)
  (Lecture) biology2 (추가) : 생물학2(3학점)
  (Lecture) bioExp2 (추가) : 생물학실험2(1학점)
  (Lecture) biology (추가) : 생물학(3학점)
  (Lecture) bioExp (추가) : 생물학실험(1학점)
  (Lecture) statistics (추가) : 통계학(3학점)
  (Lecture) staExp (추가) : 통계학실험(1학점)
  (FreeLecture) litArtFree (추가) : 문학과 예술 사용자 지정 추가
  (FreeLecture) socIdeFree (추가) : 사회와 이념 사용자 지정 추가
-클래스 별 메서드 추가
 Type : culture(교양), normal(그 외) 등이 학번별로 최소 이수 학점이 다른 경우 initialization()에서 수정할 수 있도록 setMinCredits() 추가.
 LectureField : major_necessary(전공필수), major_optional(전공선택) 등이 학번별로 최소 이수 학점이 다른 경우 initialization()에서 수정할 수 있도록 setMinCredits() 추가. 
 LectureGroup : foreign(외국어) 등이 13학번 이전에선 "대학영어 또는 고급영어"이므로 initialization()에서 수정할 수 있도록 setName() 추가.
 Lecture : chemistry1(화학1), chemistry2(화학2)가 13학번 이전에선 "화학1(화학의 기본1)", "화학2(화학의 기본2)"이므로 initialization()에서 수정할 수 있도록 setName() 추가.
-메모리 및 코딩 스타일 개선
 -탭이 오픈인지 체크하기 위한 Type, LectureField, LectureGroup, LectureWorld의 인스턴스 변수였던 viewSwitch를 int형에서 boolean형으로 변경
  -이에 따라 해당 클래스들의 getViewSwitch()의 반환형과 setViewSwitch의 파라미터를 int에서 boolean으로 변경
  -또한 MainAdapter에서 각 layout의 OnClickListener에서 오픈을 체크하는 if 문에서 조건부를 (~.getViewSwitch() == ON)에서 (~.getViewSwitch())로 변경 (getViewSwtich()의 반환형 자체가 boolean형이기 때문)
 -Type, LectureField, LectureGroup, LectureWorld, Lecture, FreeLecture, AddedLecture의 인스턴수 변수였던 code를 final로 변경
-긴 과목명 이슈 개선
 -사용자가 추가한 과목의 과목명이 긴 경우 삭제 버튼이 화면 밖으로 밀려나는 이슈 발견.
 -addlecture.xml에서 addedLectureCreditTextView와 deleteButton을 모두 HorizontalScrollView 안으로 넣어서 해결
-추가 과목 삭제 이슈 + 과목 추가/삭제 시 상위 탭 개폐 이슈 개선
 -사용자가 추가한 과목을 한 번 삭제한 상태에서 상위 탭을 닫고 다시 열기 전에 삭제 버튼을 또 누를 경우 -> 상위 탭을 닫았다가 다시 열어서 과목을 추가하려고 하면 오류 발생으로 앱이 중지되는 이슈 발견.
  -삭제 버튼을 눌렀을 때 AddedLecture.removeThis()를 통해 FreeLecture.decNum()이 실행되는데, 버튼을 눌러서 이미 decNum을 실행시킨 상태에서 버튼을 다시 누르면 decNum이 추가로 실행되어, 과목 추가 시 인덱스 오류 발생.
 -사용자가 과목을 추가/삭제 했을 때 바로 화면에 반영되지 않고 상위 탭을 닫았다가 다시 열어야 보이는 이슈.
  -(임시 방편)기존 버전에서는 토스트 메시지로 사용자가 상위 탭을 닫고 다시 열도록 유도.
 -추가 및 삭제 시 MainAdapter의 CreditManagers의 해당 인덱스에 직접 AddedLecture를 삽입/삭제 하도록 함.
  -추가/삭제가 즉시 반영.
  -삭제가 즉시 반영되므로 삭제 버튼을 중복하여 누를 수 없게 됨.
-저장소 접근 권한 관련 이슈 개선
 -마시멜로 이상 버전에서 저장소 접근 권한을 위험 권한으로 분류하면서 메니페스트 등록만으로는 저장 기능이 정상 작동하지 않는 이슈.
  -(임시 방편)기존 버전에서는 플레이스토어 앱 페이지 공지를 통해 사용자가 직접 단말기 설정에서 앱의 권한을 설정할 것을 유도.
 -위험 권한 부여를 요청하는 대화상자를 띄우는 메서드(requestPermissions()) 추가.(마시멜로 이상 버전 기기에서 확인필요 - 정상 작동 확인)
-학번 설정 변경 기능 추가
 -changeStudentNumButton : 대화상자를 띄워서 사용자가 changeStudentNum()을 임의로 사용할 수 있게 함.
  -changeStudentNum() : totalLayout과 studentNumLayout의 visibility를 뒤바꾸고, clearAll() 실행.
   -clearAll() : DataManager에서와 같이 모든 Type, LectureField, LectureGroup, LectureWorld, Lecture, FreeLecture 객체들을 초기화.
    -사용자가 새로운 studentNum을 입력한 뒤 studentNumSaveButton을 눌렀을 때 studentNumSave()를 통해 initialization()이 실행되면 기존의 데이터(각 객체들의 상하관계)가 중복되는 것을 방지하기 위함.

---[버전 4.0]---
-외국어진행강좌 수강 여부 체크 기능 추가
 -사용자 조작을 위한 forLecLayout 추가.
  -사용자가 전공/교양 여부 선택 및 과목명 입력 후 추가 가능.
  -추가 된 과목은 전공/교양 여부, 과목명, 삭제 버튼을 포함한 레이아웃(forLectureLayout)으로 ListView로 정렬.
 -데이터 관리를 위한 ForLecAdapter 추가.
  -데이터는 사용자가 forLecLayout에서 추가한 ForLecture 객체.
  -ForLecture 클래스가 Serializable을 implements하게 하여 ForLecAdapter의 ArrayList<ForLecture> 객체를 파일 입출력으로 저장/복원.

-복수/부전공 이수 학점 변경 반영
 -totalLayout에 Dialog를 띄우는 Button을 추가하여 Dialog 상에서 1.단일전공 이수, 2.다른 전공 병행이수(에자공이 타학과 복수/부전공), 3.타과생 복수전공(타과생이 에자공 복수전공), 4.타과생 부전공(타과생이 에자공 부전공) 중 택하도록.
 -전공과정을 변경하면 이전 데이터는 사라짐.
  -경고 문구로 안내.
 -전공과정 중 3., 4.는 Culture와 Normal을 필요로 하지 않으므로 null로 두었는데, 이에 따라 apply()가 전공과정을 구분하여 작동될 수 있도록 (String)progressingMajor를 추가함.
  -progressingMajor 역시 파일 입출력을 통해 저장/복원.
 -15학번 이전의 경우 전공과정 3.(에자공 부전공)에서 전공 21학점의 구성이 어떻게 되는지 알 수 없어서 하위 항목에 FreeLecture 객체를 추가하여 처리.
  -업데이트 공지사항을 통해 사용자들에게 정보 제공 요청.

-(16학번 이후) 생명존중(자살예방) 교육 이수 여부 체크 기능 추가
 -(CheckBox) lifeRespectCheckBox로 처리.
  -기존 데이터가 있는 경우 데이터 복원 시, 데이터가 없는 경우 학번 입력 후 저장 시 학번을 확인하여 16학번 이후인 경우에만 VISIBLE이 되도록 처리.

-도움말 추가
 -마이스누 또는 학과사무실에서 정확한 졸업 요건을 확인할 것을 권장하는 메시지
  -AlertDialog로 처리

---[버전 4.1]---
-복수/부전공 변경 시 '그 외 학점'의 이수 기준 학점이 변경되지 않음
 -변경되도록 조정.

-앱을 종료했다가 다시 켰을 때 생명존중(자살예방)교육 이수 여부 체크가 유지되지 않음
 -유지되도록 조정

---[버전 5.0]---
-디자인 효율성 개선
 -학번을 표시하던 studentNumTextView 삭제
  -changeStudentNumButton의 text를 "--학번"으로 표시(기존 text는 "학번 수정")
 -multiMajorButton의 text를 설정된 전공과정 내용으로 변경(기존 text는 "전공과정 변경(복수/부전공)")

-오류 개선
 -전공과정으로 "타학과 주전공, 에자공 복수전공", "타학과 주전공, 에자공 부전공" 선택 시 전체 학점 기준이 변경되지 않는 이슈
  -전체 학점 기준을 (int) minTotalCredits에 저장
  -minTotalCredits 값은 setting() 실행 시 progrssingMajor에 따라 설정
  -totalCreditsTextView에 minTotalCredits 값을 표시
 -전공과정 변경 상태에서 학번을 변경하면 표시 항목 학점 기준이 변경되지 않는 이슈
  -studentNumSave()에서 initialization() 및 Total 객체에 major, culture, normal을 설정하던 부분을 changeMajorProcess()로 대체(같은 과정이 changeMajorProcess() 내에서 전공과정 체크 후 실행 됨)

-디자인 테마 변경
 -글자색은 노란색, 힌트 글자색은 반투명한 노란색, Button 배경색은 검은색, Layout 배경색은 진한 회색으로 설정(에자공 로고 테마)
  -forLecSpinner의 글자색 및 배경색을 변환하기 위해 SpinnerAdapter를 재정의
   -Spinner 및 그 item들의 view를 커스텀하기 위해 ERETMSpinnerDropdownItemLayout 클래스와 eretm_spinner_dropdown_item 리소스 생성
 -토스트 메시지에 커스텀 디자인 적용
  -view를 커스텀하기 위해 ERETMToastLayout 클래스와 eretm_toastborder 리소스 생성
  -커스텀 토스트 메시지를 만드는 ERETMTaost() 정의
   -MainAdapter, ForLecAdapter에서도 사용할 수 있도록 static으로 정의
 -styles.xml 파일에 조건을 추가하여 액션바 제거
 -(한계)AlertDialog를 완전히 커스텀하지 못해서 도움말 창과 전공과정 변경 창의 디자인은 바꾸지 않음
 -(한계)CheckBox, RadioButton의 색상도 바꾸지 못 함

---[버전 6.0]---
-사용 언어 변경(Java -> Kotlin)
 -MainActivity.java -> MainActivity.kt 전환 완료(20200321)
 -DataManager.java -> DataManager.kt 전환 완료(20200322)
 -ERETMToastLayout.java -> ERETMToastLayout.kt 전환 완료(20200322)
 
